#!/bin/bash -e

CONFIG_DIR="${HOME}/Documents/vpn"
OPENVPN="/usr/sbin/openvpn"
VPNS="support prod prod-staging"

function info() {
  echo "[$(date)] $1" >&2
}

function parent_vpn() {
  local vpn

  vpn="$1"

  case "$vpn" in
    prod | prod-staging)
      echo support
      ;;
  esac
}

function pid_file() {
  local vpn

  vpn="$1"

  echo "/run/openvpn/${vpn}-vpn.pid"
}

function config_file() {
  local vpn

  vpn="$1"

  echo "$CONFIG_DIR/${vpn}.ovpn"
}

function connected() {
  local vpn

  vpn="$1"

  [[ -e "$(pid_file $vpn)" ]] && pgrep -F "$(pid_file $vpn)" > /dev/null
}

function connect() {
  local vpn parent

  vpn="$1"
  parent="$(parent_vpn $vpn)"

  if [[ -n "$parent" ]]; then
    connect "$parent"
  fi

  if connected "$vpn"; then
    info "already connected to $vpn"
    return 0
  fi

  info "connect to $vpn"
  sudo $OPENVPN \
       --client \
       --config "$(config_file $vpn)" \
       --auth-user-pass ~/.openvpnrc \
       --auth-nocache \
       --script-security 2 \
       --up /usr/local/bin/update-dnsmasq \
       --down /usr/local/bin/update-dnsmasq \
       --daemon \
       --writepid "$(pid_file $vpn)"
}

connect_all() {
  for vpn in $VPNS; do
    connect "$vpn"
  done
}

function menu() {
  echo "$VPNS" all close-all | xargs -n1 | dmenu -p "vpn:"
}

main() {
  local vpn

  if [[ -z "$1" ]]; then
    vpn=$(menu)
  else
    vpn="$1"
  fi

  case "$vpn" in
    close-all)
      sudo killall "$OPENVPN"
      ;;
    all)
      connect_all
      ;;
    *)
      connect "$vpn"
      ;;
  esac
}

main "$@"
