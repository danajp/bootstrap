---

- name: Get dotfiles
  git:
    repo: git@github.com:danajp/dotfiles.git
    dest: ~/src/dotfiles
    accept_hostkey: yes
    update: yes

- name: Install dotfiles
  command: make clean install
  args:
    chdir: ~/src/dotfiles

- name: Get dotemacs
  tags: [emacs]
  git:
    repo: git@github.com:danajp/dotemacs.git
    dest: ~/src/dotemacs
    accept_hostkey: yes
    update: no

- name: Link emacs config
  tags: [emacs]
  file:
    src: ~/src/dotemacs
    dest: ~/.emacs.d
    state: link
    force: yes

- name: Install asdf
  tags: [asdf]
  git:
    repo: https://github.com/asdf-vm/asdf.git
    dest: ~/.asdf
    version: v0.8.1

- name: Install asdf plugins
  tags: [asdf, asdf-plugins]
  shell: |
    . ~/.bashrc
    asdf plugin add {{ item.name }} {{ item.repo | default("") }}
  args:
    executable: /bin/bash
    creates: "~/.asdf/plugins/{{ item.name }}"
  with_items:
    - name: argo
    - name: awscli
    - name: direnv
    - name: golang
    - name: golangci-lint
    - name: helm
    - name: jb
    - name: jsonnet
    - name: kind
    - name: krew
    - name: kubebuilder
    - name: kubectl
    - name: kustomize
    - name: minikube
    - name: nodejs
    - name: protoc
    - name: python
    - name: ruby
    - name: shellcheck
    - name: starship
    - name: tanka
    - name: terraform
    - name: yq

- name: Additional nodejs plugin setup
  tags: [asdf, asdf-plugins, asdf-plugins-nodejs]
  shell: |
    . ~/.bashrc
    ~/.asdf/plugins/nodejs/bin/import-release-team-keyring
    date > ~/.asdf/plugins/nodejs/dana-keyring-imported
  args:
    executable: /bin/bash
    creates: ~/.asdf/plugins/nodejs/dana-keyring-imported

- name: Default ruby gems
  tags: [asdf, asdf-plugins, asdf-plugins-ruby]
  copy:
    content: |
      bundler
      solargraph
      solargraph-standardrb
    dest: ~/.default-gems

- name: Default python packages
  tags: [asdf, asdf-plugins, asdf-plugins-python]
  copy:
    content: |
      pipenv
    dest: ~/.default-python-packages

- name: Default go packages
  tags: [asdf, asdf-plugins, asdf-plugins-golang]
  copy:
    content: |
      golang.org/x/tools/gopls@latest
    dest: ~/.default-golang-pkgs

- name: Install asdf tool versions
  tags: [asdf, asdf-tool-versions]
  shell: |
    . ~/.bashrc
    asdf install {{ item.name }} {{ item.version }}
  args:
    executable: /bin/bash
    creates: "~/.asdf/installs/{{ item.name }}/{{ item.version }}"
  with_items:
   - { name: argo, version: 2.4.3 }
   - { name: argo, version: 2.11.0 }
   - { name: golang, version: 1.12.7 }
   - { name: golang, version: 1.13.10 }
   - { name: helm, version: 2.16.3 }
   - { name: helm, version: 3.1.2 }
   - { name: kind, version: 0.7.0 }
   - { name: kubectl, version: 1.17.4 }
   - { name: kustomize, version: 3.5.4 }
   - { name: minikube, version: 1.6.2 }
   - { name: shellcheck, version: 0.7.0 }
   - { name: starship, version: 0.57.0 }
   - { name: terraform, version: 0.12.7 }

# these compile stuff and take a long time, skip them by default
- name: Install expensive asdf tool versions
  tags: [asdf, asdf-tool-versions-expensive, never]
  shell: |
    . ~/.bashrc
    asdf install {{ item.name }} {{ item.version }}
  args:
    executable: /bin/bash
    creates: "~/.asdf/installs/{{ item.name }}/{{ item.version }}"
  with_items:
   - { name: python, version: 3.6.0 }
   - { name: python, version: 3.6.1 }
   - { name: python, version: 3.7.5 }
   - { name: ruby, version: 2.4.0 }
   - { name: ruby, version: 2.4.1 }
   - { name: ruby, version: 2.4.2 }
   - { name: ruby, version: 2.4.3 }
   - { name: ruby, version: 2.4.4 }
   - { name: ruby, version: 2.4.5 }
   - { name: ruby, version: 2.4.6 }
   - { name: ruby, version: 2.5.5 }
   - { name: ruby, version: 2.6.3 }
   - { name: ruby, version: 2.6.4 }
   - { name: ruby, version: 2.6.5 }

- name: Set asdf global versions to latest for each tool
  tags: [asdf, asdf-tool-versions]
  shell: |
    . ~/.bashrc
    for plugin in $(asdf plugin list | sort); do
      echo "$plugin $(asdf latest $plugin)"
    done > ~/.tool-versions
  args:
    executable: /bin/bash

- name: Solarized theme for gnome-terminal
  tags: [solarized]
  shell: |
    gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_background" --type bool false
    gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_colors" --type bool false
    gconftool-2 --set "/apps/gnome-terminal/profiles/Default/palette" --type string "#070736364242:#D3D301010202:#858599990000:#B5B589890000:#26268B8BD2D2:#D3D336368282:#2A2AA1A19898:#EEEEE8E8D5D5:#00002B2B3636:#CBCB4B4B1616:#58586E6E7575:#65657B7B8383:#838394949696:#6C6C7171C4C4:#9393A1A1A1A1:#FDFDF6F6E3E3"
    gconftool-2 --set "/apps/gnome-terminal/profiles/Default/background_color" --type string "#00002B2B3636"
    gconftool-2 --set "/apps/gnome-terminal/profiles/Default/foreground_color" --type string "#65657B7B8383"

- name: Set regolith look
  tags: [regolith]
  shell: |
    regolith-look set solarized-dark
    regolith-look refresh
  args:
    executable: /bin/bash
    creates: ~/.Xresources-regolith
