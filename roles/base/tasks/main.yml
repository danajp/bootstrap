---

- name: Install basic packages
  tags: [packages]
  apt: name="{{ item }}" state=latest
  with_items:
    - emacs
    - git
    - jq
    - gnupg
    - tmux
    - python-virtualenv
    - virtualenvwrapper
    - python-dev
    - openssh-server
    - openvpn
    - laptop-mode-tools
    - apt-transport-https
    - ca-certificates
    - postgresql-client
    - libpq-dev
    - awscli
    - redis-tools
    # for ansible aws
    - python-pip
    - python-boto
    - virtualbox
    - powertop
    - powerline
    - youtube-dl
    - phantomjs
    - nodejs
    - wine-stable
    - shellcheck
    - default-jre
    - sloccount
    - htop
    - traceroute
    - gnutls-bin
    - xclip
    - ldap-utils
    - moreutils
    - graphviz

- name: Install ruby build dependencies
  tags: [ruby, packages]
  apt: name="{{ item }}" state=latest
  with_items:
    - libssl-dev
    - libreadline-dev
    - zlib1g-dev
    - libsqlite3-dev
    - cmake
    - libgmp-dev
    # needed to compile ruby 2.3.x
    - gcc-6

- name: Install desktop packages
  tags: [packages, desktop]
  apt: name="{{ item }}" state=latest
  with_items:
    - i3
    - pasystray
    - rxvt-unicode
    - xfonts-terminus
    - arandr
    - gimp

- name: Add powerline symbols to terminus font
  tags: [packages, powerline]
  copy: src=11-powerline-symbols-terminus.conf dest=/etc/fonts/conf.d/ owner=root group=root mode=0644

- name: Add apt keys for google chrome
  tags: [packages, desktop, chrome]
  apt_key:
    url: https://dl-ssl.google.com/linux/linux_signing_key.pub

- name: Add apt repository for google chrome
  tags: [packages, desktop, chrome]
  apt_repository:
    repo: "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main"
    state: present
    update_cache: yes

- name: Install google chrome
  tags: [packages, desktop, chrome]
  apt:
    pkg: google-chrome-stable
    state: present

- name: Install slack client
  tags: [packages, desktop, slack]
  apt: deb="https://downloads.slack-edge.com/linux_releases/slack-desktop-{{ slack.version }}-amd64.deb" state=present

- name: Add apt keys for spotify
  tags: [packages, desktop, spotify]
  apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=0DF731E45CE24F27EEEB1450EFDC8610341D9410

- name: Add apt repository for spotify
  tags: [packages, desktop, spotify]
  apt_repository: repo='deb http://repository.spotify.com stable non-free' state=present update_cache=yes

- name: Install spotify
  tags: [packages, desktop, spotify]
  apt: pkg=spotify-client state=present

- name: Add apt keys for docker
  tags: [packages, docker]
  apt_key:
    keyserver: hkp://ha.pool.sks-keyservers.net:80
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88

- name: Add apt repository for docker
  tags: [packages, docker]
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu artful stable
    state: present
    update_cache: yes

- name: Install docker
  tags: [packages, docker]
  apt:
    pkg: docker-ce=18*
    state: present

- name: Install docker-compose
  tags: [packages, docker]
  get_url: url=https://github.com/docker/compose/releases/download/{{ docker_compose.version }}/docker-compose-Linux-x86_64  dest=/usr/local/bin/docker-compose owner=root group=root mode=0755

- name: Install container-structure-test
  tags: [packages, docker, container-structure-test]
  get_url:
    url: https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
    dest: /usr/local/bin/container-structure-test
    owner: root
    group: root
    mode: 0755

- name: Add sudoers files
  tags: [sudoers]
  copy: src=sudoers.d/ dest=/etc/sudoers.d/ owner=root group=root mode=0440 validate="visudo -cf %s"

- name: Modify nsswitch.conf
  tags: [nsswitch]
  copy: src=nsswitch.conf dest=/etc/ owner=root group=root mode=0644 backup=yes

- name: Install heroku toolbelt
  tags: [heroku]
  shell: wget -O- https://toolbelt.heroku.com/install-ubuntu.sh | sh

- name: Check if hub is installed
  tags: [hub]
  stat: path=/usr/local/bin/hub
  register: hub_installed

- name: Create hub install dir
  tags: [hub]
  file: path=/tmp/hub state=directory
  when: hub_installed.stat.exists == false

- name: Download hub
  tags: [hub]
  get_url: url="https://github.com/github/hub/releases/download/v{{ hub.version }}/hub-linux-amd64-{{ hub.version }}.tgz" dest=/tmp/hub
  when: hub_installed.stat.exists == false

- name: Install hub
  tags: [hub]
  shell: |
    tar --strip-components=1 -zxpf *.tgz
    ./install
  args:
    chdir: /tmp/hub
  when: hub_installed.stat.exists == false

- name: Remove hub installation files
  tags: [hub]
  file: path=/tmp/hub state=absent
  when: hub_installed.stat.exists == false

- name: Install Slackcat
  tags: [slackcat]
  get_url: url="https://github.com/vektorlab/slackcat/releases/download/v{{ slackcat.version }}/slackcat-{{ slackcat.version }}-linux-amd64" dest=/usr/local/bin/slackcat owner=root group=root mode=0755

- name: Install lein
  tags: [clojure]
  get_url: url=https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein dest=/usr/local/bin/lein owner=root group=root mode=0755

- name: Install aws-vault
  tags: [aws]
  get_url:
    url: https://github.com/99designs/aws-vault/releases/download/v4.2.1/aws-vault-linux-amd64
    dest: /usr/local/bin/aws-vault
    owner: root
    group: root
    mode: 0755

- name: Install vagrant
  tags: [vagrant]
  apt:
    deb: https://releases.hashicorp.com/vagrant/2.2.2/vagrant_2.2.2_x86_64.deb

- name: Get yj download url
  tags: [yj]
  shell: |
    curl -s https://api.github.com/repos/sclevine/yj/releases/latest \
      | jq -r '.assets[] | select(.name == "yj-linux") | .browser_download_url'
  register: yj_url

- name: Install yj
  tags: [yj]
  get_url:
    url: "{{ yj_url.stdout }}"
    dest: /usr/local/bin/yj
    owner: root
    group: root
    mode: 0755
