---

- name: Install basic packages
  tags: [packages]
  apt: name="{{ item }}" state=latest
  with_items:
    - emacs
    - git
    - jq
    - gnupg
    - tmux
    - python-virtualenv
    - openssh-server
    - openvpn
    - laptop-mode-tools
    - apt-transport-https
    - ca-certificates
    - postgresql-client
    - libpq-dev
    - awscli
    - redis-tools
    # for ansible aws
    - python-boto
    - virtualbox
    - powertop
    - powerline
    - youtube-dl
    - phantomjs
    - nodejs

- name: Install ruby build dependencies
  tags: [ruby, packages]
  apt: name="{{ item }}" state=latest
  with_items:
    - libssl-dev
    - libreadline-dev
    - zlib1g-dev
    - libsqlite3-dev

- name: Install desktop packages
  tags: [packages, desktop]
  apt: name="{{ item }}" state=latest
  with_items:
    - i3
    - pasystray
    - rxvt-unicode
    - xfonts-terminus
    - arandr

- name: Add powerline symbols to terminus font
  tags: [packages, powerline]
  copy: src=11-powerline-symbols-terminus.conf dest=/etc/fonts/conf.d/ owner=root group=root mode=0644

- name: Install kubectl
  tags: [packages, kubernetes]
  get_url: url=http://storage.googleapis.com/kubernetes-release/release/v1.4.0/bin/linux/amd64/kubectl dest=/usr/local/bin/kubectl owner=root group=root mode=0755

- name: Install minikube
  tags: [packages, kubernetes]
  get_url: url=https://storage.googleapis.com/minikube/releases/v0.12.2/minikube-linux-amd64 dest=/usr/local/bin/minikube owner=root group=root mode=0755

- name: Install chrome
  tags: [packages, desktop]
  apt: deb="https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb" state=present

- name: Install slack client
  tags: [packages, desktop]
  apt: deb="https://downloads.slack-edge.com/linux_releases/slack-desktop-2.3.2-amd64.deb" state=present

- name: Add apt keys for docker
  tags: [packages, docker]
  apt_key: keyserver=hkp://ha.pool.sks-keyservers.net:80 id=58118E89F3A912897C070ADBF76221572C52609D

- name: Add apt repository for docker
  tags: [packages, docker]
  apt_repository: repo='deb https://apt.dockerproject.org/repo ubuntu-xenial main' state=present update_cache=yes

- name: Install docker
  tags: [packages, docker]
  apt: pkg=docker-engine=1.12* state=present

- name: Install docker-compose
  tags: [packages, docker]
  get_url: url=https://github.com/docker/compose/releases/download/1.9.0/run.sh dest=/usr/local/bin/docker-compose owner=root group=root mode=0755

- name: Add sudoers files
  tags: [sudoers]
  copy: src=sudoers.d/ dest=/etc/sudoers.d/ owner=root group=root mode=0440 validate="visudo -cf %s"

- name: Modify nsswitch.conf
  tags: [nsswitch]
  copy: src=nsswitch.conf dest=/etc/ owner=root group=root mode=0644 backup=yes

- name: Install heroku toolbelt
  tags: [heroku]
  shell: wget -O- https://toolbelt.heroku.com/install-ubuntu.sh | sh

- name: Check if hub is installed
  tags: [hub]
  stat: path=/usr/local/bin/hub
  register: hub

- name: Create hub install dir
  tags: [hub]
  file: path=/tmp/hub state=directory
  when: hub.stat.exists == false

- name: Download hub
  tags: [hub]
  get_url: url=https://github.com/github/hub/releases/download/v2.2.9/hub-linux-amd64-2.2.9.tgz dest=/tmp/hub
  when: hub.stat.exists == false

- name: Install hub
  tags: [hub]
  shell: |
    tar --strip-components=1 -zxpf *.tgz
    ./install
  args:
    chdir: /tmp/hub
  when: hub.stat.exists == false

- name: Remove hub installation files
  tags: [hub]
  file: path=/tmp/hub state=absent
  when: hub.stat.exists == false

