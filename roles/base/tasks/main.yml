---

- name: Disable IPv6
  tags: [ipv6]
  copy:
    content: |
      # disable ipv6 entirely
      # this fixes timeouts when running apt
      sysctl net.ipv6.conf.all.disable_ipv6=1
    dest: /etc/sysctl.d/50-local-disable-ipv6.conf
    owner: root
    group: root

- name: Install basic packages
  tags: [packages]
  apt:
    name:
      - git
      - gnupg
      - tmux
      - python3-dev
      - openssh-server
      - openvpn
      - laptop-mode-tools
      - apt-transport-https
      - ca-certificates
      - postgresql-client
      - libpq-dev
      - awscli
      - redis-tools
      - virtualbox
      - powertop
      - powerline
      - youtube-dl
      # no package?
      #- phantomjs
      - nodejs
      - ncat
      - wine-stable
      - default-jre
      - sloccount
      - htop
      - traceroute
      - gnutls-bin
      - xclip
      - ldap-utils
      - moreutils
      - graphviz
      - curl
      - gconf2
      - libffi-dev
      # python stdlib dependencies
      - libbz2-dev
      - liblzma-dev
      # kvm2 dependencies
      - qemu-kvm
      - libvirt-daemon-system
      - libvirt-clients
      - virt-manager
      - genisoimage
      - bridge-utils
      - cura
      - sqlite3
      # utility for hp networked printer
      # run `hp-setup <printer ip>` to setup the printer
      - hplip-gui
      - jwt
      - amazon-ecr-credential-helper
    state: latest

- name: Emacs PPA
  tags: [emacs]
  apt_repository:
    repo: 'ppa:ubuntuhandbook1/emacs'
    state: present
    update_cache: yes

- name: Install emacs
  tags: [emacs]
  apt:
    name: emacs
    state: present

- name: Add apt key for regolith
  tags: [regolith]
  shell: |
    curl https://regolith-desktop.org/regolith.key \
      | gpg --dearmor \
      > /usr/share/keyrings/regolith.gpg

- name: Add apt source for regolith
  tags: [regolith]
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/regolith.gpg arch=amd64] https://regolith-desktop.org/release-3_0-ubuntu-jammy-amd64 jammy main"
    state: present
    update_cache: yes

- name: Install regolith packages
  tags: [regolith]
  apt:
    name:
      - i3xrocks-battery
      - i3xrocks-net-traffic
      - i3xrocks-time
      - i3xrocks-cpu-usage
      - i3xrocks-nm-vpn
      - regolith-look-solarized-dark
      - regolith-compositor-none
      - regolith-session-flashback
      - dunst
      - rofi

- name: Install ruby build dependencies
  tags: [ruby]
  apt:
    name:
      - libssl-dev
      - libreadline-dev
      - zlib1g-dev
      - libsqlite3-dev
      - cmake
      - libgmp-dev
    state: latest

- name: Install desktop packages
  tags: [desktop]
  apt:
    name:
      - pasystray
      - xfonts-terminus
      - fonts-terminus
      - fonts-inconsolata
      - fonts-noto-color-emoji
      - arandr
      - gimp
      - maim
      - blueman
      - firefox
      - copyq
    state: latest

- name: Add powerline symbols to terminus font
  tags: [powerline]
  copy:
    src: 11-powerline-symbols-terminus.conf
    dest: /etc/fonts/conf.d/
    owner: root
    group: root
    mode: 0644

- name: Rebuild font cache
  tags: [powerline]
  shell: fc-cache

- name: Install Alacritty
  tags: [alacritty]
  apt:
    deb: https://github.com/jwilm/alacritty/releases/download/v0.4.0/Alacritty-v0.4.0-ubuntu_18_04_amd64.deb
    state: present
- name: Add alacritty to terminal emulators alternatives
  tags: [alacritty]
  command:
    cmd: update-alternatives --install /usr/bin/x-terminal-emulator x-terminal-emulator /usr/bin/alacritty 50

- name: Install container linux config transpiler
  tags: [ct]
  get_url:
    url: https://github.com/flatcar-linux/container-linux-config-transpiler/releases/download/v0.9.2/ct-v0.9.2-x86_64-unknown-linux-gnu
    dest: /usr/local/bin/ct
    owner: root
    group: root
    mode: 0755

- name: Check for google chrome apt source
  tags: [chrome]
  stat:
    path: /etc/apt/sources.list.d/google-chrome.list
  register: chrome_source

- name: Install google chrome
  tags: [chrome]
  apt:
    deb: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    state: present
  when: not chrome_source.stat.exists

- name: Chrome managed policy dir
  tags: [chrome]
  file:
    state: directory
    path: /etc/opt/chrome/policies/managed

- name: Add xdg-open policy for google chrome
  tags: [chrome]
  copy:
    src: chrome-xdg-open-policy.json
    dest: /etc/opt/chrome/policies/managed/xdg-open.json

- name: Add apt key for brave
  tags: [brave]
  get_url:
    url: https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
    dest: /usr/share/keyrings/brave-browser-archive-keyring.gpg
    mode: 644

- name: Add apt source for brave
  tags: [brave]
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"
    state: present
    update_cache: yes

- name: Install brave
  tags: [brave]
  apt:
    pkg: brave-browser
    state: present

- name: Check for slack apt source
  tags: [slack]
  stat:
    path: /etc/apt/sources.list.d/slack.list
  register: slack_source

- name: Install slack client
  tags: [slack]
  apt:
    deb: https://downloads.slack-edge.com/releases/linux/4.28.182/prod/x64/slack-desktop-4.28.182-amd64.deb
    state: present
  when: not slack_source.stat.exists

- name: Add apt keys for spotify
  tags: [spotify]
  apt_key:
    url: https://download.spotify.com/debian/pubkey_5E3C45D7B312C643.gpg

- name: Add apt repository for spotify
  tags: [spotify]
  apt_repository:
    repo: "deb http://repository.spotify.com stable non-free"
    state: present
    update_cache: yes

- name: Install spotify
  tags: [spotify]
  apt:
    pkg: spotify-client
    state: present

- name: Add apt keys for docker
  tags: [docker]
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg

- name: Add apt repository for docker
  tags: [docker]
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_facts['lsb']['codename'] }} stable"
    state: present
    update_cache: yes

- name: Install docker
  tags: [docker]
  apt:
    pkg: docker-ce
    state: present

- name: Install container-structure-test
  tags: [docker, container-structure-test]
  get_url:
    url: https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
    dest: /usr/local/bin/container-structure-test
    owner: root
    group: root
    mode: 0755

- name: Add apt keys for gcloud
  tags: [gcloud]
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg

- name: Add apt repository for gcloud
  tags: [gcloud]
  apt_repository:
    repo: deb http://packages.cloud.google.com/apt cloud-sdk main
    state: present
    update_cache: yes

- name: Install gcloud
  tags: [gcloud]
  apt:
    pkg: google-cloud-cli
    state: present

- name: Configure gcloud python
  tags: [gcloud]
  copy:
    dest: /etc/profile.d/gcloud-set-python.sh
    content: |-
      export CLOUDSDK_PYTHON=python3

- name: Add apt keys for terraform-ls
  tags: [terraform-ls]
  apt_key:
    url: https://apt.releases.hashicorp.com/gpg

- name: Add apt repository for terraform-ls
  tags: [terraform-ls]
  apt_repository:
    repo: "deb https://apt.releases.hashicorp.com {{ ansible_facts['lsb']['codename'] }} main"
    state: present
    update_cache: yes

- name: Install terraform-ls
  tags: [terraform-ls]
  apt:
    pkg: terraform-ls
    state: present

- name: Add sudoers files
  tags: [sudoers]
  copy:
    src: sudoers.d/
    dest: /etc/sudoers.d/
    owner: root
    group: root
    mode: 0440
    validate: "visudo -cf %s"

- name: Modify nsswitch.conf
  tags: [nsswitch]
  copy:
    src: nsswitch.conf
    dest: /etc/
    owner: root
    group: root
    mode: 0644
    backup: yes

- name: Install heroku cli
  tags: [heroku]
  unarchive:
    src: https://cli-assets.heroku.com/heroku-linux-x64.tar.gz
    remote_src: yes
    dest: /usr/local/lib
    owner: root
    group: root
    mode: 0755

- name: Link heroku binary
  tags: [heroku]
  file:
    state: link
    src: /usr/local/lib/heroku/bin/heroku
    dest: /usr/local/bin/heroku

- name: Install Slackcat
  tags: [slackcat]
  get_url:
    url: "https://github.com/bcicen/slackcat/releases/download/1.7.3/slackcat-1.7.3-linux-amd64"
    dest: /usr/local/bin/slackcat
    owner: root
    group: root
    mode: 0755

- name: Install lein
  tags: [clojure]
  get_url:
    url: https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
    dest: /usr/local/bin/lein
    owner: root
    group: root
    mode: 0755

- name: Install vagrant
  tags: [vagrant]
  apt:
    deb: https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_x86_64.deb

- name: install DuoConnect
  tags: [duo]
  unarchive:
    src: https://dl.duosecurity.com/DuoConnect-latest.tar.gz
    remote_src: yes
    dest: /usr/local/bin
    owner: root
    group: root
    mode: 0755
    exclude: install.sh

- name: Install zoom client
  tags: [zoom]
  apt:
    deb: https://zoom.us/client/latest/zoom_amd64.deb
    state: present

- name: Install teleport
  tags: [teleport]
  apt:
    deb: https://cdn.teleport.dev/teleport_11.1.2_amd64.deb
    state: present

- name: Install commercial openvpn client apt key
  tags: [openvpn]
  apt_key:
    url: https://swupdate.openvpn.net/repos/openvpn-repo-pkg-key.pub

- name: Install commercial openvpn client apt repo
  tags: [openvpn]
  apt_repository:
    repo: deb https://swupdate.openvpn.net/community/openvpn3/repos jammy main
    state: present
    update_cache: yes

- name: Install commercial openvpn client apt repo
  tags: [openvpn]
  apt:
    pkg: openvpn3

- name: Install mullvad vpn client
  tags: [mullvad]
  apt:
    deb: https://mullvad.net/download/app/deb/latest/
    state: present

- name: Install AWS session manager plugin
  tags: [aws]
  apt:
    deb: https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb

# Fixes issue where there's a few seconds delay before audio output
# starts after switching ouputs
- name: Disable pulseaudio suspend
  tags: [pulseaudio]
  lineinfile:
    dest: /etc/pulse/default.pa
    regexp: '^\s*load-module\s+module-suspend-on-idle'
    line: '# load-module\s+module-suspend-on-idle'
    state: present

- name: Restart pulseaudio
  tags: [pulseaudio]
  lineinfile:
    dest: /etc/pulse/default.pa
    regexp: '^\s*load-module\s+module-suspend-on-idle'
    line: '# load-module\s+module-suspend-on-idle'
    state: present

- name: Install dnsmasq config for work
  tags: [openvpn, openvpn-network-manager]
  copy:
    content: |
      server=/gh.internal/10.254.0.2
      server=/ec2.internal/10.254.0.2
    dest: /etc/NetworkManager/dnsmasq.d/greenhouse-vpn.conf

- name: Reload network manager
  tags: [openvpn, openvpn-network-manager]
  systemd:
    name: NetworkManager
    state: reloaded
