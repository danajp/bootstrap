---

- name: Disable IPv6
  tags: [ipv6]
  ansible.builtin.copy:
    content: |
      # disable ipv6 entirely
      # this fixes timeouts when running apt
      sysctl net.ipv6.conf.all.disable_ipv6=1
    dest: /etc/sysctl.d/50-local-disable-ipv6.conf
    owner: root
    group: root

- name: Disable snap
  tags: [snap]
  ansible.builtin.copy:
    content: |-
      Package: snapd
      Pin: release a=*
      Pin-Priority: -10
    dest: /etc/apt/preferences.d/disable-snap
    owner: root
    group: root

- name: Add apt repo pub keys
  tags: [apt-repos]
  ansible.builtin.shell:
    cmd: |
      curl {{ item.key .url }} | gpg --dearmor > /usr/share/keyrings/bootstrap-{{ item.name }}.gpg
      chmod 644 /usr/share/keyrings/bootstrap-{{ item.name }}.gpg

    creates: "/usr/share/keyrings/bootstrap-{{ item.name }}.gpg"
  loop: "{{ apt_repositories }}"

- name: Add apt repos
  tags: [apt-repos]
  ansible.builtin.apt_repository:
    filename: "bootstrap-{{ item.name }}"
    repo: "deb [signed-by=/usr/share/keyrings/bootstrap-{{ item.name }}.gpg arch=amd64] {{ item.repo.url }} {{ item.repo.release }} {{ item.repo.component }}"
    state: present
    update_cache: false
  loop: "{{ apt_repositories }}"

- name: Emacs PPA
  tags: [emacs]
  ansible.builtin.apt_repository:
    repo: 'ppa:ubuntuhandbook1/emacs'
    state: present
    update_cache: false

- name: Update cache
  tags: [apt-repos]
  ansible.builtin.apt:
    update_cache: true

- name: Install basic packages
  tags: [packages]
  ansible.builtin.apt:
    name:
      - git
      - gnupg
      - tmux
      - python3-dev
      - openssh-server
      - openvpn
      - laptop-mode-tools
      - apt-transport-https
      - ca-certificates
      - postgresql-client
      - libpq-dev
      - redis-tools
      - virtualbox
      - powertop
      - powerline
      - nodejs
      - ncat
      - wine-stable
      - default-jre
      - sloccount
      - htop
      - traceroute
      - gnutls-bin
      - xclip
      - ldap-utils
      - moreutils
      - graphviz
      - curl
      - libffi-dev
      # python stdlib dependencies
      - libbz2-dev
      - liblzma-dev
      # kvm2 dependencies
      - qemu-kvm
      - libvirt-daemon-system
      - libvirt-clients
      - virt-manager
      - genisoimage
      - bridge-utils
      - sqlite3
      # utility for hp networked printer
      # run `hp-setup <printer ip>` to setup the printer
      - hplip-gui
      - jwt
      - amazon-ecr-credential-helper
      - zsh
      # alacritty build dependencies
      - cmake
      - g++
      - pkg-config
      - libfreetype6-dev
      - libfontconfig1-dev
      - libxcb-xfixes0-dev
      - libxkbcommon-dev
      - python3
    state: latest

- name: Install apt repo packages
  tags: [apt-repos]
  ansible.builtin.apt:
    name: "{{ apt_repositories | map(attribute='packages') | flatten }}"

- name: Install emacs
  tags: [emacs]
  ansible.builtin.apt:
    name: emacs
    state: present

- name: Install ruby build dependencies
  tags: [ruby]
  ansible.builtin.apt:
    name:
      - libssl-dev
      - libreadline-dev
      - zlib1g-dev
      - libsqlite3-dev
      - cmake
      - libgmp-dev
      - libyaml-dev
      # for rugged gem
      - libgit2-dev
      - pkgconf
    state: latest

- name: Install desktop packages
  tags: [desktop]
  ansible.builtin.apt:
    name:
      - xfonts-terminus
      - fonts-terminus
      - fonts-inconsolata
      - fonts-noto-color-emoji
      - arandr
      - gimp
      - maim
      - blueman
      - firefox
      - copyq
    state: latest

- name: Add powerline symbols to terminus font
  tags: [powerline]
  ansible.builtin.copy:
    src: 11-powerline-symbols-terminus.conf
    dest: /etc/fonts/conf.d/
    owner: root
    group: root
    mode: 0644

- name: Rebuild font cache
  tags: [powerline]
  ansible.builtin.shell: fc-cache

- name: Install container linux config transpiler
  tags: [ct]
  ansible.builtin.get_url:
    url: https://github.com/flatcar-linux/container-linux-config-transpiler/releases/download/v0.9.2/ct-v0.9.2-x86_64-unknown-linux-gnu
    dest: /usr/local/bin/ct
    owner: root
    group: root
    mode: 0755

- name: Check for google chrome apt source
  tags: [chrome]
  ansible.builtin.stat:
    path: /etc/apt/sources.list.d/google-chrome.list
  register: chrome_source

- name: Install google chrome
  tags: [chrome]
  ansible.builtin.apt:
    deb: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    state: present
  when: not chrome_source.stat.exists

- name: Chrome managed policy dir
  tags: [chrome]
  ansible.builtin.file:
    state: directory
    path: /etc/opt/chrome/policies/managed

- name: Add xdg-open policy for google chrome
  tags: [chrome]
  ansible.builtin.copy:
    src: chrome-xdg-open-policy.json
    dest: /etc/opt/chrome/policies/managed/xdg-open.json

- name: Check for slack apt source
  tags: [slack]
  ansible.builtin.stat:
    path: /etc/apt/sources.list.d/slack.list
  register: slack_source

- name: Install slack client
  tags: [slack]
  ansible.builtin.apt:
    deb: https://downloads.slack-edge.com/desktop-releases/linux/x64/4.41.105/slack-desktop-4.41.105-amd64.deb
    state: present
  when: not slack_source.stat.exists

- name: Install container-structure-test
  tags: [docker, container-structure-test]
  ansible.builtin.get_url:
    url: https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
    dest: /usr/local/bin/container-structure-test
    owner: root
    group: root
    mode: 0755

- name: Configure gcloud python
  tags: [gcloud]
  ansible.builtin.copy:
    dest: /etc/profile.d/gcloud-set-python.sh
    content: |-
      export CLOUDSDK_PYTHON=python3

- name: Add sudoers files
  tags: [sudoers]
  ansible.builtin.copy:
    src: sudoers.d/
    dest: /etc/sudoers.d/
    owner: root
    group: root
    mode: 0440
    validate: "visudo -cf %s"

- name: Modify nsswitch.conf
  tags: [nsswitch]
  ansible.builtin.copy:
    src: nsswitch.conf
    dest: /etc/
    owner: root
    group: root
    mode: 0644
    backup: yes

- name: Install heroku cli
  tags: [heroku]
  ansible.builtin.unarchive:
    src: https://cli-assets.heroku.com/heroku-linux-x64.tar.gz
    remote_src: yes
    dest: /usr/local/lib
    owner: root
    group: root
    mode: 0755

- name: Link heroku binary
  tags: [heroku]
  ansible.builtin.file:
    state: link
    src: /usr/local/lib/heroku/bin/heroku
    dest: /usr/local/bin/heroku

- name: Install Slackcat
  tags: [slackcat]
  ansible.builtin.get_url:
    url: "https://github.com/bcicen/slackcat/releases/download/1.7.3/slackcat-1.7.3-linux-amd64"
    dest: /usr/local/bin/slackcat
    owner: root
    group: root
    mode: 0755

- name: Install lein
  tags: [clojure]
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
    dest: /usr/local/bin/lein
    owner: root
    group: root
    mode: 0755

- name: Install vagrant
  tags: [vagrant]
  ansible.builtin.apt:
    deb: https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_x86_64.deb

- name: Install zoom client
  tags: [zoom]
  ansible.builtin.apt:
    deb: https://zoom.us/client/latest/zoom_amd64.deb
    state: present

- name: Install mullvad vpn client
  tags: [mullvad]
  ansible.builtin.apt:
    deb: https://mullvad.net/download/app/deb/latest/
    state: present

- name: Install AWS session manager plugin
  tags: [aws]
  ansible.builtin.apt:
    deb: https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb

- name: Install 1password
  tags: [1password]
  ansible.builtin.apt:
    deb: https://downloads.1password.com/linux/debian/amd64/stable/1password-latest.deb
    state: present

- name: Install dnsmasq config for work
  tags: [openvpn, openvpn-network-manager]
  ansible.builtin.copy:
    content: |
      server=/gh.internal/10.254.0.2
      server=/ec2.internal/10.254.0.2
    dest: /etc/NetworkManager/dnsmasq.d/greenhouse-vpn.conf

- name: Reload network manager
  tags: [openvpn, openvpn-network-manager]
  ansible.builtin.systemd:
    name: NetworkManager
    state: reloaded

- name: Install duo desktop
  tags: [duo]
  ansible.builtin.apt:
    deb: https://desktop.pkg.duosecurity.com/duo-desktop-latest.amd64.deb

- name: Disable tracker miner
  tags: [tracker]
  ansible.builtin.lineinfile:
    dest: /etc/xdg/autostart/tracker-miner-fs-3.desktop
    regexp: X-GNOME-Autostart-enabled
    line: X-GNOME-Autostart-enabled=false
